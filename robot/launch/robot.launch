<launch>
    <!--publish frames for ground truth-->
    <node pkg="tf" type="static_transform_publisher" name="laser_front_broadcaster" args="0.475 0 0.15 0 0 0 base_link_copy laser_front_copy 1.25" />
    <node pkg="tf" type="static_transform_publisher" name="laser_back_broadcaster" args="-0.475 0 0.15 3.14 0 0 base_link_copy laser_back_copy 1.25" />

    <param name="robot_description" textfile="$(find visualiser)/robot_models/four_wheel.urdf" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" required="true" />
    <node pkg="robot_state_publisher" name="robot_state_publisher" type="state_publisher">
        <param name="publish_frequency" value="60"/>
    </node>

    <node name="motion_controller_node" pkg="navigation" type="motion_controller_node.py" output="screen">
        <param name="linear_velocity" type="double" value="0.01" />
        <param name="angular_velocity" type="double" value="0.02" />
        <param name="obstacle_safe_distance" type="double" value="0.5" />
        <param name="obstacle_following_direction" type="str" value="right" />
    </node>

    <node name="world_frame_publisher" pkg="robot" type="world_frame_publisher.py" />

    <node name="laser_scan_publisher" pkg="robot" type="laser_scan_publisher.py" output="screen">
        <param name="number_of_readings" type="int" value="41" />
        <param name="scanner_min_angle" type="double" value="-1.57" />
        <param name="scanner_max_angle" type="double" value="1.57" />
        <param name="scanner_angle_increment" type="double" value="0.0785" />
        <param name="noise_standard_deviation" type="double" value="0.0001" />
    </node>

    <!--<node name="goal_manager" pkg="robot" type="goal_manager.py" output="screen">
        <param name="goal_file_name" type="str" value="$(find robot)/goal_locations.txt" />
    </node>-->

    <include file="$(find map)/launch/map.launch" />
    <include file="$(find localisation)/launch/localisation.launch" />
    <include file="$(find mapping)/launch/mapping.launch" />
</launch>
